
[project]
name = ""
version = ""
description = ""
authors = [
    {name = "redjax", email = "none@none.com"},
]
dependencies = [
    "fastapi>=0.100.0",
    "stackprinter>=0.2.10",
    "httpx>=0.24.1",
    "loguru>=0.7.0",
    "msgpack>=1.0.5",
    "diskcache>=5.6.1",
    "uvicorn>=0.22.0",
    "pydantic[dotenv]>=2.0.2",
    "sqlalchemy>=2.0.18",
    "psycopg2-binary>=2.9.6",
    "pyodbc>=4.0.39",
    "pydantic-settings>=2.0.1",
    "dynaconf>=3.2.2",
    "alembic>=1.11.3",
]
requires-python = ">=3.11"
license = {text = "MIT"}

[tool.pdm.scripts]

## Format scripts
# Check only, don't fix
check = { cmd = "black ." }
#  Check and fix
format = { cmd = "ruff check . --fix" }

## Create initial commit
alembic-init = {cmd = "alembic revision -m 'Initial commit.'"}

## Upgrade Alembic head after making model changes
alembic-upgrade = {cmd = "alembic upgrade head" }

## Run migrations
#  Prompts for a commit message
alembic-migrate = {shell = "read -p 'Commit message: ' commit_msg && pdm run alembic revision --autogenerate -m '${commit_msg}'" }

migrations = { shell = "pdm run alembic upgrade head && read -p 'Commit message: ' commit_msg && pdm run alembic revision --autogenerate -m '${commit_msg}'" }

## Start scripts
#  Run main app or script. Launches from app/
start = { shell = "cd app && pdm run python main.py" }

## Export requirement scripts
#  Export production requirements
export = { cmd = "pdm export --prod -o requirements.txt --without-hashes" }
#  Export only development requirements
export-dev = { cmd = "pdm export -d -o requirements.dev.txt --without-hashes" }
## Uncomment if/when using a CI group
# export-ci = { cmd = "pdm export -G ci -o requirements.ci.txt --without-hashes" }

[tool.pdm.dev-dependencies]
dev = [
    "ruff>=0.0.277",
    "black>=23.7.0",
    "pytest>=7.4.0",
]
